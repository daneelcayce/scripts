#! /bin/bash
# hacky commit script that allows for a log for different computers

# export wordgrinder documents
for f in *.wg; do
    printf '%s\n' "${f%.wg}" >> files
done

# export wordgrinder projects to markdown by way of html
# also compiles projects into a single file for easy wordcount
while IFS='' read -r line || [[ -n "$line" ]]; do
   mkdir $line
   > $line/$line.md
   while IFS='' read -r file || [[ -n "$file" ]]; do
     wordgrinder -c $line.wg:$file $line/$file.html
     pandoc $line/$file.html -s -o $line/$file.md
     rm $line/$file.html
     cat $line/$file.md >> $line/$line.md
   done < .$line
done < files

# read current branch and use it in commit message
git branch | head -n 1 >> out

tr -s '[:blank:]' '[\n*]' < out |
  while IFS= read -r word; do
    : echo "$word" >> /dev/null
    if [ "$word" != "*" ]
    then
      echo "$word" > out
    fi
  done

BRANCH=$(cat out)
rm out
rm files

date=$(date)
echo "$HOSTNAME committed to $BRANCH at $date" >> messages.log
git add *
git commit -a # allows user to add message

exit
